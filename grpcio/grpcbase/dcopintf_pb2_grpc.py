# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import grpcio.grpcbase.dcopintf_pb2 as dcopintf__pb2


class GrpcRequestStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ProcessRequest = channel.unary_unary(
        '/GrpcDcopPb.GrpcRequest/ProcessRequest',
        request_serializer=dcopintf__pb2.PbRequest.SerializeToString,
        response_deserializer=dcopintf__pb2.PbResult.FromString,
        )
    self.CommandLineResult = channel.unary_unary(
        '/GrpcDcopPb.GrpcRequest/CommandLineResult',
        request_serializer=dcopintf__pb2.PbRequest.SerializeToString,
        response_deserializer=dcopintf__pb2.PbResult.FromString,
        )


class GrpcRequestServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ProcessRequest(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CommandLineResult(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GrpcRequestServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ProcessRequest': grpc.unary_unary_rpc_method_handler(
          servicer.ProcessRequest,
          request_deserializer=dcopintf__pb2.PbRequest.FromString,
          response_serializer=dcopintf__pb2.PbResult.SerializeToString,
      ),
      'CommandLineResult': grpc.unary_unary_rpc_method_handler(
          servicer.CommandLineResult,
          request_deserializer=dcopintf__pb2.PbRequest.FromString,
          response_serializer=dcopintf__pb2.PbResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'GrpcDcopPb.GrpcRequest', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class Notify2NCSStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Notify = channel.unary_unary(
        '/GrpcDcopPb.Notify2NCS/Notify',
        request_serializer=dcopintf__pb2.PbResult.SerializeToString,
        response_deserializer=dcopintf__pb2.Errcode.FromString,
        )


class Notify2NCSServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Notify(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_Notify2NCSServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Notify': grpc.unary_unary_rpc_method_handler(
          servicer.Notify,
          request_deserializer=dcopintf__pb2.PbResult.FromString,
          response_serializer=dcopintf__pb2.Errcode.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'GrpcDcopPb.Notify2NCS', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
